class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
    int n = matrix.size();
    int m = matrix[0].size();
    vector<int>My_array;
    
    int left = 0;
    int top = 0;
    int right = m-1;
    int bottom = n-1;


while(top<=bottom && left<=right){
    for(int i=left; i<=right; i++){
        My_array.push_back(matrix[top][i]);
    }
    top++;

    for(int i=top; i<=bottom; i++){
        My_array.push_back(matrix[i][right]);
    }
    right--;

    //check for left to right 
    if(top<=bottom){
    for(int i=right; i>=left; i--){
        My_array.push_back(matrix[bottom][i]);
    }
    bottom--;
    }

    //check for top to bottom
    if(left<=right){
    for(int i=bottom; i>=top; i--){
        My_array.push_back(matrix[i][left]);
    }
    left++;
    }
}
return My_array;
}
};
