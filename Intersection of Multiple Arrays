class Solution {
public:
    vector<int> intersection(vector<vector<int>>& nums) {
        
        vector<int>ans;
        int n = nums.size();

      std::array<int, 1001> freq = {0};

        for(const auto&  num : nums){
            for(int el : num){
                freq[el]++;
            }
        }

        for(int i=0; i<1001; i++){
            if(freq[i]==n){
                ans.push_back(i);
            }
        }
return ans;

/*unordered_map<int,int>mp;

for(const auto& array : nums){
    for(int ele : array){
        mp[ele]++;
    }
}

for(const auto& x : mp){
    if(x.second == n){
        ans.push_back(x.first);
    }
}
sort(ans.begin(),ans.end());
return ans;*/
    }
};
