class Solution {
public:
    vector<int> vowelStrings(vector<string>& words, vector<vector<int>>& queries) {

//vowel storing in set

        unordered_set<char>st;

        st.insert('a');
        st.insert('e'); 
        st.insert('i');
        st.insert('o');
        st.insert('u');

//checking and storing strings which have vowel character in start and end 
        vector<int>prefix_sum;

        for(int i=0; i<words.size(); i++){
            if(st.find(words[i][0])!=st.end() && st.find(words[i][words[i].size()-1]) != st.end()){
            prefix_sum.push_back(1);
            }
            else{
            prefix_sum.push_back(0);
            }
        }
    
    //prefix sum
        for(int i=1; i<prefix_sum.size(); i++){
                 prefix_sum[i] = prefix_sum[i] + prefix_sum[ i-1];
        }
        
    //range travese
    vector<int>ans;

    for(int i=0; i<queries.size(); i++){
         if(queries[i][0] > 0){
            ans.push_back(prefix_sum[queries[i][1]] - prefix_sum[queries[i][0]-1]);
         }else{
            ans.push_back(prefix_sum[queries[i][1]]);
         }
    }
return ans;
        
    }
};
