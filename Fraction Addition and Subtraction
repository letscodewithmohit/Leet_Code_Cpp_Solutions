class Solution {
public:
    string fractionAddition(string exp) {
        int nume = 0;
        int demo = 1;

        int i = 0;
        int n = exp.size();
        while(i < n){
            int currnume = 0;
            int currdemo = 0;
            bool isNeg = (exp[i]=='-');

            if(exp[i]=='+' || exp[i]=='-'){
                i++;
            }

            //buliding nume
            while(i < n && isdigit(exp[i])){
                int val = exp[i]-'0';
                currnume = (currnume*10)+val;
                i++;
            }
            //skiping '/'
            i++;
            if(isNeg){
                currnume*=-1;
            }

            //bulding demo
            while(i<n && isdigit(exp[i])){
                int val = exp[i]-'0';
                currdemo = (currdemo*10)+val;
                i++;
            }
            nume = nume * currdemo + currnume * demo;
            demo = demo * currdemo;

        }

        //nume
        //demo
        int GCD = abs(__gcd(nume,demo));
        nume = nume/GCD;
        demo = demo/GCD;
        return to_string(nume) + "/" + to_string(demo);
    }
};
